@model BellaNapoli.Models.Utenti

@{
    ViewBag.Title = "Register";
}

<h2 class="text-center heading my-3">Registrati</h2>
<p class="text-center" style="margin-inline: 20%"><span class="fw-bolder">Perchè registrarsi?</span> - Diventare un membro registrato della nostra pizzeria ti trasforma in un ospite VIP, offrendoti accesso esclusivo a una selezione curata delle nostre migliori pizze, promozioni speciali e un'esperienza d'ordine personalizzata e senza intoppi.</p>


<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group text-center">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2 py-2" })
                <div class="col-12 text-center">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-center">
                @Html.LabelFor(model => model.Cognome, htmlAttributes: new { @class = "control-label col-md-2 py-1" })
                <div class="col-12 text-center">
                    @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                    @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-center">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 py-1" })
                <div class="col-12 text-center">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-center">
                @Html.LabelFor(model => model.Psw, htmlAttributes: new { @class = "control-label col-md-2 py-1" })
                <div class="col-12 text-center">
                    @Html.EditorFor(model => model.Psw, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                    @Html.ValidationMessageFor(model => model.Psw, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group text-center">
                @Html.LabelFor(model => model.CAP, htmlAttributes: new { @class = "control-label col-md-2 py-1" })
                <div class="col-12 text-center">
                    @Html.EditorFor(model => model.CAP, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                    @Html.ValidationMessageFor(model => model.CAP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-center">
                @Html.LabelFor(model => model.Citta, htmlAttributes: new { @class = "control-label col-md-2 py-1" })
                <div class="col-12 text-center">
                    @Html.EditorFor(model => model.Citta, new { htmlAttributes = new { @class = "form-control mx-auto" } })
                    @Html.ValidationMessageFor(model => model.Citta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-center">
                <div class="col-12 ms-auto">
                    <input type="submit" value="Registrati" class="btn btn-success menu-button px-5 my-5 w-100" />
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@* ------------------------------ TOASTS --------------------------------- *@

@if (TempData["RegFail"] != null)
{
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script type="text/javascript">
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr.error('@TempData["RegFail"]')
    </script>
}