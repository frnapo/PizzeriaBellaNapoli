@{
    ViewBag.Title = "Index";
}
@model IEnumerable<BellaNapoli.Models.Prodotti>
@using BellaNapoli.Models

<h2 class="text-center heading mt-1 mb-3">Le nostre pizze</h2>

<div class="container mb-5 pb-2">
    <div class="d-flex justify-content-center mb-3">
        @if (User.IsInRole("Admin"))
        {
            @Html.ActionLink("+ Aggiungi un prodotto", "Create", null, new { @class = "btn btn-success" })
        }
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-3">
        @foreach (var item in Model)
        {
            <div class="col pizza-col">
                <div class="mb-5">
                    <div class="bg-white pizza-image-container">
                        @if (User.IsInRole("Admin"))
                        {
                            <div class="mb-3">
                                @Html.ActionLink("Modifica", "Edit", new { id = item.idProdotto }, new { @class = "bi bi-pencil-square text-decoration-none btn btn-outline-primary mx-2" })
                                @Html.ActionLink("Elimina", "Delete", new { id = item.idProdotto }, new { @class = "bi bi-x-circle text-decoration-none btn btn-outline-danger" })
                            </div>
                        }
                        <img src="@item.Foto" alt="Pizza" class="pizza-image shadow">
                    </div>
                    <div class="pizza-info p-3">

                        <div class="d-flex align-items-center">
                            <h3 class="fs-4 mb-1">@item.Nome</h3>
                            <span> - @item.Consegna.Minutes minuti <i class="bi bi-clock me-2 mb-1" style="font-size: 10px;"></i></span>
                        </div>

                        <p class="pt-0 mt-0">
                            @{
                                var ingredienti = item.Ingredienti.Split(',');
                                foreach (var ingrediente in ingredienti)
                                {
                                    var (badgeColor, textColor) = ingrediente.GetBadgeColors();
                                    <span class="badge" style="background-color: @badgeColor; color: @textColor">@ingrediente</span>
                                }
                            }
                        </p>

                        @using (Html.BeginForm("AddToCart", "Prodotti", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.idProdotto" />
                            <div class="d-flex align-items-center">
                                <input id="Quantita" type="number" name="quantita" value="1" min="1" max="30" class="shadow form-control me-2" style="width: auto;">
                                <input type="submit" value="@item.Prezzo.ToString("F2")€ - Carrello" class="btn btn-success shadow menu-button rounded-0 buy-button w-100">
                            </div>
                        }

                    </div>
                </div>
            </div>
                }
            </div>
        </div>




        @* ------------------------------ TOASTS --------------------------------- *@

        @if (TempData["CreateMess"] != null)
        {
            <script src="~/Scripts/jquery-3.4.1.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
            <script type="text/javascript">
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr.success('@TempData["CreateMess"]')
            </script>
        }

        @if (TempData["CartMessage"] != null)
        {
            <script src="~/Scripts/jquery-3.4.1.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
            <script type="text/javascript">
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr.warning('@TempData["CartMessage"]')
            </script>
        }
